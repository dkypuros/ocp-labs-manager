---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: {{ .Values.application_name }}
  name: {{ .Release.Name }}-sa
  namespace: {{ .Values.pipeline.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: {{ .Values.application_name }}
  name: {{ .Release.Name }}-sa_edit
  namespace: {{ .Values.pipeline.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edit
subjects:
- kind: ServiceAccount
  name: {{ .Release.Name }}-sa
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  labels:
    app.kubernetes.io/name: {{ .Values.application_name }}
  name: {{ .Release.Name }}-image
  namespace: {{ .Values.pipeline.namespace }}
spec:
  type: image
  params:
  - name: url
    value: image-registry.openshift-image-registry.svc:5000/{{ .Values.pipeline.namespace }}/{{ .Values.application_name }}
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  labels:
    app.kubernetes.io/name: {{ .Values.application_name }}
  name: {{ .Release.Name }}-git
  namespace: {{ .Values.pipeline.namespace }}
spec:
  type: git
  params:
  - name: url
    value: {{ .Values.pipeline.source_repo }}
  - name: revision
    value: {{ .Values.pipeline.source_ref }}
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  labels:
    app.kubernetes.io/name: {{ .Values.application_name }}
  name: maven-build-binary-build
  namespace: {{ .Values.pipeline.namespace }}
spec:
  resources:
    inputs:
    - name: source
      type: git
  steps:
  - name: package
    image: maven:3.6.0-jdk-8-slim
    workingDir: /workspace/source
    command:
    - /usr/bin/mvn
    args:
    - package
  - name: make-upload-dir
    image: quay.io/openshift-pipeline/openshift-cli:latest
    command: ["mkdir"]
    args:
      - -p
      - /workspace/source/upload
  - name: copy-assets
    image: quay.io/openshift-pipeline/openshift-cli:latest
    command: ["cp"]
    args:
      - /workspace/source/target/{{ .Values.pipeline.resource_name }}
      - /workspace/source/upload
  - name: oc-binary-build
    image: quay.io/openshift-pipeline/openshift-cli:latest
    command: ["/usr/local/bin/oc"]
    workingDir: /workspace/source/upload
    args:
    - start-build
    - -w
    - -F
    - {{ .Values.application_name }}
    - --from-dir
    - "."
  - name: oc-tag-image
    image: quay.io/openshift-pipeline/openshift-cli:latest
    command: ["/usr/local/bin/oc"]
    workingDir: /workspace/source/upload
    args:
    - tag
    - {{ .Values.pipeline.namespace }}/{{ .Values.application_name }}:latest
    - {{ .Values.application_stage_namespace }}/{{ .Values.application_name }}:latest
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  labels:
    app.kubernetes.io/name: {{ .Values.application_name }}
  name: repo-update
  namespace: {{ .Values.pipeline.namespace }}
spec:
  params:
    - name: fromNamespace
      description: The namespace we are tagging from
    - name: toNamespace
      description: The namespace we are tagging to
    - name: tag
      description: The image tag
    - name: imageStream
      description: The imageStream
    - name: deploymentResource
      description: the deployment resource, e.g deployment or deploymentconfig
    - name: deployment
      description: the deployment name
  steps:
    - name: tag-image
      image: quay.io/openshift-pipeline/openshift-cli:latest
      command: ["/usr/local/bin/oc"]
      args:
        - tag
        - "$(params.fromNamespace)/$(params.imageStream):$(params.tag)"
        - "$(params.toNamespace)/$(params.imageStream):$(params.tag)"
    - name: verify-deployment
      image: quay.io/openshift-pipeline/openshift-cli:latest
      command: ["oc"]
      args:
        - rollout
        - status
        - "$(params.deploymentResource)/$(params.deployment)"
        - -n
        - "$(params.toNamespace)"
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: mvn
spec:
  workspaces:
  - name: maven-repo
  inputs:
    params:
    - name: GOALS
      description: The Maven goals to run
      type: array
      default: ["package"]
    resources:
    - name: source
      type: git
  steps:
    - name: mvn
      image: gcr.io/cloud-builders/mvn
      workingDir: /workspace/source
      command: ["/usr/bin/mvn"]
      args:
        - -Dmaven.repo.local=$(workspaces.maven-repo.path)
        - "$(inputs.params.GOALS)"
---
kind: Task
apiVersion: tekton.dev/v1alpha1
metadata:
  name: sonar-scan
spec:
  workspaces:
  - name: maven-repo
  inputs:
    params:
      - name: POM_FILE
        description: The pom file to process
        default: ./pom.xml
      - name: SONAR_USER
        default: "admin"
      - name: SONAR_PASSWORD
        default: "admin"
      - name: SONAR_URL
        default: ""
    resources:
    - name: source
      type: git
    #results:
    #- name: scan-source
    #description: "Scan results are found here"
  steps:
    - name: scan-source
      image: gcr.io/cloud-builders/mvn
      workingdir: /workspace/source
      envFrom:
        - configMapRef:
            name: sonarqube-config
            optional: true
        - secretRef:
            name: sonarqube-access
            optional: true
      command: ["/usr/bin/mvn"]
      args:
      #- "-lrt"
      - package
      - org.sonarsource.scanner.maven:sonar-maven-plugin:3.6.0.1398:sonar
      - '-f' 
      - ./pom.xml
      - "-Dsonar.login=$(inputs.params.SONAR_USER)"
      - "-Dsonar.password=$(inputs.params.SONAR_PASSWORD)" 
      - "-Dsonar.host.url=$(inputs.params.SONAR_URL)"
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  labels:
    app.kubernetes.io/name: {{ .Values.application_name }}
  name: {{ .Release.Name }}-pipeline
  namespace: {{ .Values.pipeline.namespace }}
spec:
  workspaces:
  - name: local-tssc-repo
  params:
    - name: SONAR_URL
      type: string
      description: Sonar Url
      default: http://sonarqube:9000
    - name: SONAR_USER
      type: string
      default: admin
    - name: SONAR_PASSWORD
      type: string
      default: admin
  resources:
  - name: {{ .Release.Name }}-git
    type: git
  tasks:
  - name: compile
    taskRef:
      name: mvn
      kind: Task
    workspaces:
    - name: maven-repo
      workspace: local-tssc-repo
    params:
      - name: GOALS
        value:
        - "compile"
    resources:
      inputs:
      - name: source
        resource: {{ .Release.Name }}-git
  - name: unit-test
    taskRef:
      name: mvn
      kind: Task
    workspaces:
    - name: maven-repo
      workspace: local-tssc-repo
    runAfter:
    - compile
    params:
      - name: GOALS
        value: 
        - "test"
    resources:
      inputs:
      - name: source
        resource: {{ .Release.Name }}-git
  - name: sonar-scan
    taskRef:
      name: sonar-scan
    workspaces:
    - name: maven-repo
      workspace: local-tssc-repo
    params:
    - name: SONAR_USER
      value: "$(params.SONAR_USER)"
    - name: SONAR_PASSWORD
      value: "$(params.SONAR_PASSWORD)"
    - name: SONAR_URL
      value: "$(params.SONAR_URL)"
    resources:
      inputs:
      - name: source
        resource: {{ .Release.Name }}-git
    runAfter:
    - unit-test
  - name: build-image
    taskRef:
      name: maven-build-binary-build
    resources:
      inputs:
      - name: source
        resource: {{ .Release.Name }}-git
    runAfter:
    - sonar-scan

